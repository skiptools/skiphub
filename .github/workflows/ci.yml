name: skiphub ci

on:
  push:
    branches: 'main'
  schedule:
    - cron:  '0 10 * * *'
  workflow_dispatch:
  pull_request:

env:
  #DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer
  DEVELOPER_DIR: /Applications/Xcode_14.3.app/Contents/Developer

jobs:
  ci:
    #strategy:
      #fail-fast: false
      #matrix:
        #target: ['SkipLib', 'SkipFoundation', 'SkipKit', 'SkipUI', 'ExampleLib', 'ExampleApp']
        #os: ['macos-12']
        #os: ['macos-12', 'macos-13']
        #mode: ['debug', 'release']

    runs-on: macos-13

    #env:
      #OS: ${{ matrix.os }}
      #TARGET: ${{ matrix.target }}

    steps:
      - name: Setup ${{ github.event_name }} environment
        # when the workflow was dispatched manually run against source HEAD
        # otherwise, run tests against the latest binary release
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "CONFIG=debug" >> $GITHUB_ENV
          else 
            echo "CONFIG=release" >> $GITHUB_ENV
          fi

      - name: Checkout skiphub
        uses: actions/checkout@v3
        with:
          path: skiphub
          repository: skiptools/skiphub

      - name: Check skiptool (Release)
        working-directory: skiphub
        run: swift package --disable-sandbox --allow-writing-to-package-directory skip info

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Check gradle
        run: |
          which gradle
          gradle --version

      - name: Configure debug Flags
        # when in debug mode, we run against a local build of the toolchain
        if: env.CONFIG == 'debug'
        run: |
          echo "SKIPLOCAL=.." >> $GITHUB_ENV

      - name: Checkout skip
        if: env.CONFIG == 'debug'
        uses: actions/checkout@v3
        with:
          path: skip
          repository: skiptools/skip

      - name: Checkout skiptool
        if: env.CONFIG == 'debug'
        uses: actions/checkout@v3
        with:
          path: skiptool
          repository: skiptools/skiptool
          token: ${{ secrets.GH_TOKEN }}

      - name: Check skiptool (debug)
        if: env.CONFIG == 'debug'
        working-directory: skiphub
        run: swift package --disable-sandbox --allow-writing-to-package-directory skip info

#      # Attempt to run the tests in parallel mode.
#      # When successful this will bypass the individual framework tests.
#      - name: Fast Tests
#        if: false
#        working-directory: skiphub
#        #run: swift test --parallel && echo 'SKIP_FASTPASS=YES' >> $GITHUB_ENV || (rm -rf .build ; echo "Skip parallel tests failed so tests will be run individually")
#        run: swift test && echo 'SKIP_FASTPASS=YES' >> $GITHUB_ENV || (rm -rf .build ; echo "Skip parallel tests failed so tests will be run individually")
#
#      - name: Fast Tests (2)
#        if: false
#        #if: env.SKIP_FASTPASS != 'YES'
#        working-directory: skiphub
#        run: swift test --parallel && echo 'SKIP_FASTPASS=YES' >> $GITHUB_ENV || (rm -rf .build ; echo "Skip parallel tests failed so tests will be run individually")
#
#      - name: Fast Tests (3)
#        if: false
#        #if: env.SKIP_FASTPASS != 'YES'
#        working-directory: skiphub
#        run: swift test --parallel && echo 'SKIP_FASTPASS=YES' >> $GITHUB_ENV || (rm -rf .build ; echo "Skip parallel tests failed so tests will be run individually")
#
#      - name: Fast Tests (4)
#        if: false
#        #if: env.SKIP_FASTPASS != 'YES'
#        working-directory: skiphub
#        run: swift test --parallel && echo 'SKIP_FASTPASS=YES' >> $GITHUB_ENV || (rm -rf .build ; echo "Skip parallel tests failed so tests will be run individually")

      # Pre-build to work around concurrency issues
      - name: Pre-build ${{ matrix.target }}
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: |
          swift build --target SkipUnitKt && swift build --target SkipLibKt && swift build --target SkipFoundationKt && swift build --target SkipKitKt && swift build --target SkipUIKt && swift build --target ExampleLibKt && swift build --target ExampleAppKt && swift build

      - name: SkipLib Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipLibTests
      - name: SkipLib Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipLibKtTests || swift test -c ${CONFIG} --filter SkipLibKtTests || swift test -c ${CONFIG} --filter SkipLibKtTests || swift test -c ${CONFIG} --filter SkipLibKtTests

      - name: SkipFoundation Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipFoundationTests
      - name: SkipFoundation Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipFoundationKtTests || swift test -c ${CONFIG} --filter SkipFoundationKtTests || swift test -c ${CONFIG} --filter SkipFoundationKtTests || swift test -c ${CONFIG} --filter SkipFoundationKtTests || swift test -c ${CONFIG} --filter SkipFoundationKtTests

      - name: SkipKit Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipKitTests
      - name: SkipKit Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipKitKtTests || swift test -c ${CONFIG} --filter SkipKitKtTests || swift test -c ${CONFIG} --filter SkipKitKtTests || swift test -c ${CONFIG} --filter SkipKitKtTests || swift test -c ${CONFIG} --filter SkipKitKtTests

      - name: SkipUI Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipUITests
      - name: SkipUI Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipUIKtTests || swift test -c ${CONFIG} --filter SkipUIKtTests || swift test -c ${CONFIG} --filter SkipUIKtTests || swift test -c ${CONFIG} --filter SkipUIKtTests || swift test -c ${CONFIG} --filter SkipUIKtTests

      - name: ExampleLib Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleLibTests
      - name: ExampleLib Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleLibKtTests || swift test -c ${CONFIG} --filter ExampleLibKtTests || swift test -c ${CONFIG} --filter ExampleLibKtTests || swift test -c ${CONFIG} --filter ExampleLibKtTests || swift test -c ${CONFIG} --filter ExampleLibKtTests

      - name: ExampleApp Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleAppTests
      - name: ExampleApp Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleAppKtTests || swift test -c ${CONFIG} --filter ExampleAppKtTests || swift test -c ${CONFIG} --filter ExampleAppKtTests || swift test -c ${CONFIG} --filter ExampleAppKtTests || swift test -c ${CONFIG} --filter ExampleAppKtTests

      - name: Gradle Tests (Android)
        working-directory: skiphub
        if: false
        run: |
          PLUGIN_OUTPUT=.build/plugins/outputs/skiphub
          # get the most recent derived data folder
          #PLUGIN_OUTPUT=`ls -1rtd ~/Library/Developer/Xcode/DerivedData/skiphub-*/SourcePackages/plugins/skiphub.output | tail -n 1`

          cd ${PLUGIN_OUTPUT}/${{ matrix.target }}KtTests/skip-transpiler

          brew install tree
          tree -lh -I build .

          gradle check -Pandroid.useAndroidX=true --console=plain --no-daemon

          # TODO:
          #gradle "connected${{ env.CONFIG }}AndroidTest" -Pandroid.useAndroidX=true -Dorg.gradle.jvmargs=-Xmx2g --rerun-tasks --console=plain --no-daemon

      - name: Swift Tests (iOS)
        working-directory: skiphub
        run: |
          xcodebuild -showsdks
          # note CONFIG Release/Debug needs to be capitalized for xcodebuild
          xcodebuild test -skipPackagePluginValidation -configuration "Release" -sdk "iphonesimulator16.2" -destination "platform=iOS Simulator,name=iPhone 14" -scheme "skiphub-Package" ENABLE_TESTABILITY=YES || echo "IOS TESTS FAILED"
          # | xcpretty && exit ${PIPESTATUS[0]}
