name: skiphub ci

on:
  push:
    branches: 'main'
  schedule:
    - cron:  '0 0,6,12,18 * * *'
  workflow_dispatch:

env:
  DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        target: ['SkipUnit', 'SkipLib', 'SkipFoundation', 'SkipKit', 'SkipUI', 'ExampleLib', 'ExampleApp']
        mode: ['debug', 'release']
        os: ['macos-12']
        #os: ['macos-12', 'macos-13']

    runs-on: ${{ matrix.os }}

    env:
      CONFIG: ${{ matrix.mode }}
      TARGET: ${{ matrix.target }}

    steps:
      - name: Checkout skiphub
        uses: actions/checkout@v3
        with:
          path: skiphub
          repository: skiptools/skiphub

      - name: Check skiptool (Release)
        working-directory: skiphub
        run: swift package --disable-sandbox --allow-writing-to-package-directory skip info

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configure debug Flags
        # when in debug mode, we run against a local build of the toolchain
        if: ${{ matrix.mode == 'debug' }}
        run: |
          echo "SKIPLOCAL=.." >> $GITHUB_ENV

      - name: Checkout skip
        if: ${{ matrix.mode == 'debug' }}
        uses: actions/checkout@v3
        with:
          path: skip
          repository: skiptools/skip

      - name: Checkout SkipSource
        if: ${{ matrix.mode == 'debug' }}
        uses: actions/checkout@v3
        with:
          path: SkipSource
          repository: skiptools/SkipSource
          token: ${{ secrets.GH_TOKEN }}

      - name: Check skiptool (debug)
        if: ${{ matrix.mode == 'debug' }}
        working-directory: skiphub
        run: swift package --disable-sandbox --allow-writing-to-package-directory skip info

      - name: Pre-build ${{ matrix.target }}
        working-directory: skiphub
        # the pre-build needs to take place because the Skip
        # packages currently need to be built in order, but
        # SPM will attempt to build the targets in parallel
        if: true
        run: |
          swift build --target SkipUnitKt && swift build --target SkipLibKt && swift build --target SkipFoundationKt && swift build --target SkipDeviceKt && swift build --target SkipSQLKt && swift build --target SkipUIKt && swift build --target ExampleLibKt && swift build --target ExampleAppKt
          #swift build --target SkipUnitKt --target SkipLibKt --target SkipFoundationKt --target SkipDeviceKt --target SkipSQLKt --target SkipUIKt --target ExampleLibKt --target ExampleAppKt

      - name: Run ${{ matrix.target }} Swift Tests (macOS)
        working-directory: skiphub
        run: |
          swift test --configuration "${CONFIG}" --filter "${{ matrix.target }}Tests\."

      - name: Run ${{ matrix.target }} Gradle Tests (macOS)
        working-directory: skiphub
        # we don't use xcpretty here because it doesn't show skip's gradle output
        run: |
          swift test --configuration "${CONFIG}" --filter "${{ matrix.target }}KtTests\."

      - name: Run ${{ matrix.target }} Swift Tests (iOS)
        # disabled to speed up CI (adds ~5m)
        if: false
        working-directory: skiphub
        run: |
          # note CONFIG Release/Debug needs to be capitalized for xcodebuild
          xcodebuild test -skipPackagePluginValidation -configuration "${${CONFIG/debug/Debug}/release/Release}" -sdk "iphonesimulator" -destination "platform=iOS Simulator,name=iPhone SE (3rd generation)" -scheme "${{ matrix.target }}" ENABLE_TESTABILITY=YES | xcpretty && exit ${PIPESTATUS[0]}

      - name: Run ${{ matrix.target }} Gradle Tests (Android)
        working-directory: skiphub
        run: |
          PLUGIN_OUTPUT=.build/plugins/outputs/skiphub
          # get the most recent derived data folder
          #PLUGIN_OUTPUT=`ls -1rtd ~/Library/Developer/Xcode/DerivedData/skiphub-*/SourcePackages/plugins/skiphub.output | tail -n 1`

          cd ${PLUGIN_OUTPUT}/${{ matrix.target }}KtTests/skip-transpiler

          brew install tree
          tree -lh -I build .

          gradle check -Pandroid.useAndroidX=true --console=plain --no-daemon

          # TODO:
          #gradle "connected${{ matrix.mode }}AndroidTest" -Pandroid.useAndroidX=true -Dorg.gradle.jvmargs=-Xmx2g --rerun-tasks --console=plain --no-daemon


