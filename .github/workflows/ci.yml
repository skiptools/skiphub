name: skiphub ci

on:
  push:
    #branches: 'main'
  schedule:
    - cron:  '0 10 * * *'
  workflow_dispatch:
  pull_request:

env:
  #DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer
  DEVELOPER_DIR: /Applications/Xcode_14.3.app/Contents/Developer
  #SKIP_FASTPASS: YES

jobs:
  ci:
    #strategy:
      #fail-fast: false
      #matrix:
        #target: ['SkipLib', 'SkipFoundation', 'SkipKit', 'SkipUI', 'ExampleLib', 'ExampleApp']
        #os: ['macos-12']
        #os: ['macos-12', 'macos-13']
        #mode: ['debug', 'release']

    runs-on: macos-13

    #env:
      #OS: ${{ matrix.os }}
      #TARGET: ${{ matrix.target }}

    steps:
      - name: Setup ${{ github.event_name }} environment
        # when the workflow was dispatched manually run against source HEAD
        # otherwise, run tests against the latest binary release
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "CONFIG=debug" >> $GITHUB_ENV
          else 
            echo "CONFIG=release" >> $GITHUB_ENV
          fi

      - name: Checkout skiphub
        uses: actions/checkout@v3
        with:
          path: skiphub
          repository: skiptools/skiphub

      - name: Check skiptool (Release)
        working-directory: skiphub
        run: swift package --disable-sandbox --allow-writing-to-package-directory skip info

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Check gradle
        run: |
          which gradle
          gradle --version

      - name: Configure debug Flags
        # when in debug mode, we run against a local build of the toolchain
        if: env.CONFIG == 'debug'
        run: |
          echo "SKIPLOCAL=.." >> $GITHUB_ENV

      - name: Checkout skip
        if: env.CONFIG == 'debug'
        uses: actions/checkout@v3
        with:
          path: skip
          repository: skiptools/skip

      - name: Checkout skiptool
        if: env.CONFIG == 'debug'
        uses: actions/checkout@v3
        with:
          path: skiptool
          repository: skiptools/skiptool
          token: ${{ secrets.GH_TOKEN }}

      - name: Check skiptool (debug)
        if: env.CONFIG == 'debug'
        working-directory: skiphub
        run: swift package --disable-sandbox --allow-writing-to-package-directory skip info

      # Pre-build to work around concurrency issues
      - name: Build ${{ matrix.target }}
        working-directory: skiphub
        run: |
          swift build --jobs 1

      - name: SkipLib Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipLibTests
      - name: SkipLib Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipLibKtTests

      - name: SkipFoundation Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipFoundationTests
      - name: SkipFoundation Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipFoundationKtTests

      - name: SkipKit Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipKitTests
      - name: SkipKit Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipKitKtTests

      - name: SkipUI Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipUITests
      - name: SkipUI Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipUIKtTests

      - name: ExampleLib Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleLibTests
      - name: ExampleLib Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleLibKtTests

      - name: ExampleApp Swift Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleAppTests
      - name: ExampleApp Kotlin Tests
        if: env.SKIP_FASTPASS != 'YES'
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleAppKtTests

      - name: Debug Tests (Serial)
        working-directory: skiphub
        run: swift test --jobs 1 -c debug

      - name: Debug Tests (Parallel)
        working-directory: skiphub
        run: swift test --parallel -c debug

      - name: Release Tests (Serial)
        if: false
        working-directory: skiphub
        run: swift test --jobs 1 -c release

      - name: Release Tests (Parallel)
        if: false
        working-directory: skiphub
        run: swift test --parallel -c release

      - name: Gradle Build (Android)
        working-directory: skiphub
        run: |
          PLUGIN_OUTPUT=.build/plugins/outputs/skiphub
          cd ${PLUGIN_OUTPUT}/ExampleAppKtTests/skip-transpiler

          brew install tree
          tree -lh -I build .

          gradle check --console=plain
          gradle assembleDebug --console=plain
          #gradle "connected${{ env.CONFIG }}AndroidTest" --console=plain

      - name: Swift Tests (iOS)
        working-directory: skiphub
        run: |
          xcodebuild -showsdks
          # note CONFIG Release/Debug needs to be capitalized for xcodebuild
          xcodebuild test -skipPackagePluginValidation -configuration "Release" -sdk "iphonesimulator16.2" -destination "platform=iOS Simulator,name=iPhone 14" -scheme "skiphub-Package" ENABLE_TESTABILITY=YES || echo "IOS TESTS FAILED"
          # | xcpretty && exit ${PIPESTATUS[0]}

