name: skiphub ci

on:
  push:
    #branches: 'main'
  schedule:
    - cron:  '0 10 * * *'
  workflow_dispatch:
  pull_request:

env:
  #DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer
  DEVELOPER_DIR: /Applications/Xcode_14.3.app/Contents/Developer

jobs:
  ci:
    #strategy:
      #fail-fast: false
      #matrix:
        #target: ['SkipLib', 'SkipFoundation', 'SkipKit', 'SkipUI', 'ExampleLib', 'ExampleApp']
        #os: ['macos-12']
        #os: ['macos-12', 'macos-13']
        #mode: ['debug', 'release']

    runs-on: macos-13

    #env:
      #OS: ${{ matrix.os }}
      #TARGET: ${{ matrix.target }}

    steps:
      - name: Setup ${{ github.event_name }} environment
        # when the workflow was dispatched manually run against source HEAD
        # otherwise, run tests against the latest binary release
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "CONFIG=debug" >> $GITHUB_ENV
          else 
            echo "CONFIG=release" >> $GITHUB_ENV
          fi

      - name: Checkout skiphub
        uses: actions/checkout@v3
        with:
          path: skiphub
          repository: skiptools/skiphub

      - name: Check skiptool (Release)
        working-directory: skiphub
        run: swift package --disable-sandbox --allow-writing-to-package-directory skip info

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Check gradle
        run: |
          which gradle
          gradle --version
          brew upgrade gradle
          gradle --version
          brew install tree

      - name: Configure debug Flags
        # when in debug mode, we run against a local build of the toolchain
        if: env.CONFIG == 'debug'
        run: |
          echo "SKIPLOCAL=.." >> $GITHUB_ENV

      - name: Checkout skip
        if: env.CONFIG == 'debug'
        uses: actions/checkout@v3
        with:
          path: skip
          repository: skiptools/skip

      - name: Checkout skiptool
        if: env.CONFIG == 'debug'
        uses: actions/checkout@v3
        with:
          path: skiptool
          repository: skiptools/skiptool
          token: ${{ secrets.GH_TOKEN }}

      - name: Check skiptool (debug)
        if: env.CONFIG == 'debug'
        working-directory: skiphub
        run: swift package --disable-sandbox --allow-writing-to-package-directory skip info

      # Pre-build to work around concurrency issues
      - name: Build ${{ matrix.target }}
        working-directory: skiphub
        run: |
          swift build --jobs 1

      - name: SkipLib Swift Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipLibTests
      - name: SkipLib Kotlin Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipLibKtTests

      - name: SkipFoundation Swift Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipFoundationTests
      - name: SkipFoundation Kotlin Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipFoundationKtTests

      - name: SkipKit Swift Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipKitTests
      - name: SkipKit Kotlin Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipKitKtTests

      - name: SkipUI Swift Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipUITests
      - name: SkipUI Kotlin Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter SkipUIKtTests

      - name: ExampleLib Swift Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleLibTests
      - name: ExampleLib Kotlin Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleLibKtTests

      - name: ExampleApp Swift Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleAppTests
      - name: ExampleApp Kotlin Tests
        working-directory: skiphub
        run: swift test -c ${CONFIG} --filter ExampleAppKtTests

      - name: Checkout skipapp
        uses: actions/checkout@v3
        with:
          path: skipapp.swiftpm
          repository: skiptools/skipapp.swiftpm
      - name: skipapp tests
        working-directory: skipapp.swiftpm
        run: |
          swift build --jobs 1
          swift test --jobs 1
          ls -lah Packages/Skip/skipapp.swiftpm/AppDemoKtTests/skip-transpiler/AppDemo/.build/AppDemo/outputs/apk/release/AppDemo-release-unsigned.apk
          ls -lah Packages/Skip/skipapp.swiftpm/AppDemoKtTests/skip-transpiler/AppDemo/.build/AppDemo/outputs/apk/debug/AppDemo-debug.apk

      - name: Debug Tests (Serial)
        if: false
        working-directory: skiphub
        run: swift test --jobs 1 -c debug

      - name: Debug Tests (Parallel)
        if: false
        working-directory: skiphub
        run: swift test --parallel -c debug

      - name: Release Tests (Serial)
        if: false
        working-directory: skiphub
        run: swift test --jobs 1 -c release

      - name: Release Tests (Parallel)
        if: false
        working-directory: skiphub
        run: swift test --parallel -c release

      - name: Gradle Build (Android)
        # folder links in Packages/Skip/ should have been created by tests
        #working-directory: skiphub/Packages/Skip/skiphub/ExampleAppKtTests/skip-transpiler
        working-directory: skiphub/.build/plugins/outputs/skiphub/ExampleAppKtTests/skip-transpiler
        run: |
          # Print an ASCII visualization of the folder
          tree -lh -I build .

          # check the project for errors
          gradle check --console=plain

          # Build the APK
          gradle assembleDebug --console=plain
          gradle assembleRelease --console=plain || echo "gradle assembleRelease failed"
          ls -lah `find . -name '*.apk'`

      - name: Android Tests
        if: false
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 29
          working-directory: skiphub
          script: SKIP_GRADLE_TEST_TARGET=connectedDebugAndroidTest swift test -c ${CONFIG} --filter '.*KtTests'

      - name: Swift Tests (iOS)
        working-directory: skiphub
        run: |
          xcodebuild -showsdks
          xcodebuild build -skipPackagePluginValidation -configuration "Debug" -sdk "iphonesimulator16.4" -destination "platform=iOS Simulator,name=iPhone 14" -scheme "Skip Package Hub-Package" ENABLE_TESTABILITY=YES || echo IOS BUILD FAILED
          xcodebuild test -skipPackagePluginValidation -configuration "Debug" -sdk "iphonesimulator16.4" -destination "platform=iOS Simulator,name=iPhone 14" -scheme "Skip Package Hub-Package" ENABLE_TESTABILITY=YES || echo IOS TESTS FAILED
