name: skip-core ci

on:
  push:
    branches: 'main'
  schedule:
    - cron:  '0 0,6,12,18 * * *'

env:
  DEVELOPER_DIR: /Applications/Xcode_14.2.app/Contents/Developer

jobs:
  ci:
    strategy:
      fail-fast: false
      matrix:
        #target: ['SkipLib', 'SkipFoundation', 'ExampleLib' ]
        target: ['SkipLib', 'SkipFoundation', 'SkipUI', 'SkipDevice', 'SkipSQL']
        #target: ['SkipLib', 'SkipFoundation', 'SkipUI', 'SkipDevice', 'SkipSQL', 'SkipUI', 'ExampleLib', 'ExampleApp']
        mode: ['Debug', 'Release']
        os: ['macos-12']
        #os: ['macos-12', 'macos-13']

    runs-on: ${{ matrix.os }}

    env:
      CONFIG: ${{ matrix.mode }}
      TARGET: ${{ matrix.target }}

    steps:
      - name: Checkout skip-core
        uses: actions/checkout@v3
        with:
          path: skip-core
          repository: skiptools/skip-core

      - name: Check skiptool (Release)
        working-directory: skip-core
        run: swift package --disable-sandbox --allow-writing-to-package-directory skip info

      - name: Setup Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Configure Debug Flags
        # when in Debug mode, we run against a local build of the toolchain
        if: ${{ matrix.mode == 'Debug' }}
        run: |
          echo "SKIPLOCAL=.." >> $GITHUB_ENV

      - name: Checkout skip
        if: ${{ matrix.mode == 'Debug' }}
        uses: actions/checkout@v3
        with:
          path: skip
          repository: skiptools/skip

      - name: Checkout SkipSource
        if: ${{ matrix.mode == 'Debug' }}
        uses: actions/checkout@v3
        with:
          path: SkipSource
          repository: skiptools/SkipSource
          token: ${{ secrets.GH_TOKEN }}
          # temporary: testing symbols
          branch: marcprux/symbol-replacement

      - name: Check skiptool (Debug)
        if: ${{ matrix.mode == 'Debug' }}
        working-directory: skip-core
        run: swift package --disable-sandbox --allow-writing-to-package-directory skip info

      - name: Run ${{ matrix.target }} Swift Tests (macOS)
        working-directory: skip-core
        run: |
          xcodebuild test -skipPackagePluginValidation -configuration "${CONFIG}" -sdk "macosx" -destination "platform=macosx" -scheme "${{ matrix.target }}" ENABLE_TESTABILITY=YES | xcpretty && exit ${PIPESTATUS[0]}

      # symbolgraph-extract needs to be manually run not because we use the symbols,
      # but because it pre-caches SwiftShims.swiftmodule and other modules into a
      # temporary folders that the transpiler build plug-in does not have write access to

      # this shows up as an error on the GH runners like:
      #
      # Error: terminated(1): /usr/bin/xcrun swift symbolgraph-extract -module-name SkipUnit -include-spi-symbols -skip-inherited-docs -skip-synthesized-members -output-dir /var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/T/7D655714-40E7-4E36-B322-774B8ACBE4FB -target x86_64-apple-macosx12.0 -sdk /Applications/Xcode_14.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk -F /Applications/Xcode_14.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/../../Library/Frameworks/ -minimum-access-level internal -I /Users/runner/Library/Developer/Xcode/DerivedData/skip-core-cpmrmpnysoyybacpdfaabaxuqhex/Build/Products/Debug output:
      #
      # <unknown>:0: error: unable to open output file '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/C/clang/ModuleCache/1CUWPUEC7D78B/Darwin-1IPQPNED63C6S.pcm': 'Operation not permitted'
      #
      # <unknown>:0: error: could not build Objective-C module 'Darwin'
      #
      # <unknown>:0: error: unable to open output file '/var/folders/24/8k48jl6d249_n_qfxwsl6xvm0000gn/C/clang/ModuleCache/28ISCAFRG14KL/XCTest-3BBK7W05KE09V.pcm': 'Operation not permitted'
      #
      # /Applications/Xcode_14.2.app/Contents/Developer/Platforms/MacOSX.platform/Developer/usr/lib/XCTest.swiftmodule/x86_64-apple-macos.swiftinterface:7:19: error: could not build Objective-C module 'XCTest'
      #
      # @_exported import XCTest

      - name: Cache Swift modules
        working-directory: skip-core
        run: |
          mkdir ${TMPDIR}/symbolgraph-extract
          for module in SwiftShims Foundation Darwin XCTest SQLite3 OSLog os CoreTransferable SwiftUI ; do /usr/bin/xcrun swift symbolgraph-extract -module-name ${module} -include-spi-symbols -skip-inherited-docs -skip-synthesized-members -output-dir ${TMPDIR}/symbolgraph-extract -target x86_64-apple-macosx12.0 -sdk ${DEVELOPER_DIR}/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk -F ${DEVELOPER_DIR}/Platforms/MacOSX.platform/Developer/SDKs/MacOSX13.1.sdk/../../Library/Frameworks/ -minimum-access-level internal -I .build/debug/ ; done
          ls -lah ${TMPDIR}/symbolgraph-extract

      - name: Run ${{ matrix.target }} Gradle Tests (Robolectric)
        working-directory: skip-core
        # we don't use xcpretty here because it doesn't show skip's gradle output
        run: |
          xcodebuild test -skipPackagePluginValidation -configuration "${CONFIG}" -sdk "macosx" -destination "platform=macosx" -scheme "${{ matrix.target }}Kt" ENABLE_TESTABILITY=YES

      - name: Run ${{ matrix.target }} Swift Tests (iOS)
        working-directory: skip-core
        run: |
          xcodebuild test -skipPackagePluginValidation -configuration "${CONFIG}" -sdk "iphonesimulator" -destination "platform=iOS Simulator,name=iPhone SE (3rd generation)" -scheme "${{ matrix.target }}" ENABLE_TESTABILITY=YES | xcpretty && exit ${PIPESTATUS[0]}

      - name: Run ${{ matrix.target }} Gradle Tests (Android)
        working-directory: skip-core
        run: |
          # get the most recent derived data folder
          DER=`ls -1rtd ~/Library/Developer/Xcode/DerivedData/skip-core-*/SourcePackages/plugins/skip-core.output | tail -n 1`

          cd ${DER}/${{ matrix.target }}TestsKt/SkipTranspilePlugIn
          #tree -lh -I build .

          gradle check -Pandroid.useAndroidX=true --console=plain --no-daemon

          # TODO:
          #gradle "connected${{ matrix.mode }}AndroidTest" -Pandroid.useAndroidX=true -Dorg.gradle.jvmargs=-Xmx2g --rerun-tasks --console=plain --no-daemon


